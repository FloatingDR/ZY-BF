<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafuc.flyeat.zy.mapper.CourseScoreLinkMapper">
  <resultMap id="BaseResultMap" type="cafuc.flyeat.zy.model.CourseScoreLink">
    <id column="score_id" jdbcType="INTEGER" property="scoreId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="class_course_id" jdbcType="INTEGER" property="classCourseId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="tip" jdbcType="VARCHAR" property="tip" />
    <association column="student_id" property="student" select="getStudent" />
    <association column="class_course_id" property="course" select="getCourse" />
    <association column="teacher_id" property="teacher" select="getTeacher" />
  </resultMap>
  <sql id="Base_Column_List">
    score_id, student_id, class_course_id, teacher_id, score, tip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </select>
  <select id="selectByClassCourseLink" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from course_score
    where class_course_id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cafuc.flyeat.zy.model.CourseScoreLink">
    <selectKey keyProperty="scoreId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_score (student_id, class_course_id, teacher_id, score,
      tip)
    values (#{studentId,jdbcType=INTEGER}, #{classCourseId,jdbcType=INTEGER}, #{teacherId, jdbcType=INTEGER} #{score,jdbcType=INTEGER},
      #{tip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cafuc.flyeat.zy.model.CourseScoreLink">
    <selectKey keyProperty="scoreId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into course_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="classCourseId != null">
        class_course_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="tip != null">
        tip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classCourseId != null">
        #{classCourseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="tip != null">
        #{tip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cafuc.flyeat.zy.model.CourseScoreLink">
    update course_score
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classCourseId != null">
        class_course_id = #{classCourseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="tip != null">
        tip = #{tip,jdbcType=VARCHAR},
      </if>
    </set>
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cafuc.flyeat.zy.model.CourseScoreLink">
    update course_score
    set student_id = #{studentId,jdbcType=INTEGER},
      class_course_id = #{classCourseId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      tip = #{tip,jdbcType=VARCHAR}
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
  <select id="getStudent" resultMap="cafuc.flyeat.zy.mapper.StudentMapper.BaseResultMap">
    select student_id,student_name,student_number,nation,birthday,male,cpc,punishment,dormitory,college_id,major_id,company_id from student where student_id=#{studentId}
  </select>
  <select id="getCourse" resultMap="cafuc.flyeat.zy.mapper.CourseMapper.LinkMap">
    SELECT
        course.course_id,
        course.course_name,
        course.zy_course,
        course.parent_id,
        course.weight
    FROM
        course,
        class_course
    WHERE
        class_course.course_id = course.course_id
        AND class_course.class_course_id = #{classCourseId}
  </select>
  <select id="getTeacher" resultMap="cafuc.flyeat.zy.mapper.TeacherMapper.LinkMap">
    SELECT
        t.teacher_id,
        t.teacher_name,
        t.nation,
        t.arrival_date,
        t.birthday,
        t.cpc,
        t.edu_bg,
        t.reward,
        t.college_id,
        t.staff_id,
        t.teacher_type,
        t.sfz_number,
        t.graduate_school,
        t.graduate_major,
        t.title,
        t.phone,
        t.email,
        t.projects,
        t.company
    FROM
        teacher t
    WHERE
        t.teacher_id = #{teacherId}
  </select>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into course_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].scoreId!=null">
        score_id,
      </if>
      <if test="list[0].studentId!=null">
        student_id,
      </if>
      <if test="list[0].classCourseId!=null">
        class_course_id,
      </if>
      <if test="list[0].teacherId!=null">
        teacher_id,
      </if>
      <if test="list[0].score!=null">
        score,
      </if>
      <if test="list[0].tip!=null">
        tip,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.scoreId!=null">
          #{item.scoreId,jdbcType=INTEGER},
        </if>
        <if test="item.studentId!=null">
          #{item.studentId,jdbcType=INTEGER},
        </if>
        <if test="item.classCourseId!=null">
          #{item.classCourseId,jdbcType=INTEGER},
        </if>
        <if test="item.teacherId!=null">
          #{item.teacherId,jdbcType=INTEGER},
        </if>
        <if test="item.score!=null">
          #{item.score,jdbcType=INTEGER},
        </if>
        <if test="item.tip!=null">
          #{item.tip,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update course_score
      <set>
        <if test="item.studentId!=null">
          student_id=#{item.studentId,jdbcType=INTEGER},
        </if>
        <if test="item.classCourseId!=null">
          class_course_id=#{item.classCourseId,jdbcType=INTEGER},
        </if>
        <if test="item.teacherId!=null">
          class_course_id=#{item.teacherId,jdbcType=INTEGER},
        </if>
        <if test="item.score!=null">
          score=#{item.score,jdbcType=INTEGER},
        </if>
        <if test="item.tip!=null">
          tip=#{item.tip,jdbcType=VARCHAR},
        </if>
      </set>
      where 
      score_id = #{item.scoreId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>